/* 
  1.单线程: 作为浏览器的脚本语言, JS的主要用途与用户互动,以及操作dom这决定了他只能是单线程的

  2.任务队列: 单线程就意味着需要任务队列, 前一个任务结束,才会执行后一个任务.如果前一个任务耗时很长,后一个任务就不得不一致等着

  3.异步:(异步任务指的是，不进入主线程、而进入"任务队列"（task queue）的任务，只有"任务队列"通知主线程，某个异步任务可以执行了，该任务才会进入主线程执行。) JavaScript语言的设计者意识到，这时主线程完全可以不管IO设备，挂起处于等待中的任务，先运行排在后面的任务。等到IO设备返回了结果，再回过头，把挂起的任务继续执行下去

  4.运行机制: 只要主线程空了,就会去任务队列读取,这就是JS运行机制

  ，setTimeout(fn,0)的含义是，指定某个任务在主线程最早可得的空闲时间执行，也就是说，尽可能早得执行。它在"任务队列"的尾部添加一个事件，因此要等到同步任务和"任务队列"现有的事件都处理完，才会得到执行。
  
*/